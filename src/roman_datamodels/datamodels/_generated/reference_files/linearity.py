# Generated by RAD using generator based on datamodel-code-generator
#    source schema: reference_files/linearity-1.0.0.yaml
#    time stamp:    VERSION CONTROLLED
# DO NOT EDIT THIS FILE DIRECTLY!

from __future__ import annotations

from enum import Enum
from typing import Annotated, ClassVar

from pydantic import Field

from roman_datamodels.core._extended import _LinearityRefModel
from roman_datamodels.core.adaptors import AstropyUnit, NdArray, Unit, np

from ..ref_common import RefCommon


class reftype(Enum):
    LINEARITY = 'LINEARITY'


class meta(RefCommon):
    schema_uri: ClassVar[None] = None
    reftype: reftype
    input_units: Annotated[AstropyUnit[Unit("DN")], Field(title='Units of the input to the linearity polynomial.')]
    output_units: Annotated[AstropyUnit[Unit("DN")], Field(title='Units of the output of the linearity polynomial.')]


class LinearityRefModel(_LinearityRefModel):
    """
    Linearity correction  reference schema
    """

    schema_uri: ClassVar[str] = "asdf://stsci.edu/datamodels/roman/schemas/reference_files/linearity-1.0.0"

    tag_uri: ClassVar[str] = "asdf://stsci.edu/datamodels/roman/tags/reference_files/linearity-1.0.0"

    meta: meta
    coeffs: Annotated[
        NdArray[np.float32, 3, (8, 4096, 4096)],
        Field(
            description='Contains the coefficients of a polynomial to correct pixel\nvalues for classic non-linearity. Both the input to and\noutput from the polynomial are in units of DN. The coefficients\nhave units that contain various powers of DN.\n',
            title='Linearity coefficients',
        ),
    ]
    dq: Annotated[NdArray[np.uint32, 2, (4096, 4096)], Field(title='2-D data quality array for all planes')]

# Generated by RAD using generator based on datamodel-code-generator
#    source schema: reference_files/dark-1.0.0.yaml
#    time stamp:    VERSION CONTROLLED
# DO NOT EDIT THIS FILE DIRECTLY!

from __future__ import annotations

from enum import Enum
from typing import Annotated, ClassVar

from pydantic import Field

from roman_datamodels.core._base import BaseDataModel
from roman_datamodels.core._model import DataModel
from roman_datamodels.core.adaptors import AstropyQuantity, NdArray, Unit, np

from ..ref_common import RefCommon
from ..ref_exposure_type import RefExposureType
from ..ref_optical_element import RefOpticalElement


class Reftype(Enum):
    DARK = 'DARK'


class Exposure(BaseDataModel):
    schema_uri: ClassVar[None] = None
    ngroups: Annotated[int, Field(title='Number of groups in integration')]
    nframes: Annotated[int, Field(title='Number of frames per group')]
    groupgap: Annotated[int, Field(title='Number of frames dropped between groups')]
    ma_table_name: Annotated[str, Field(title='Identifier for the multi-accumulation table used')]
    ma_table_number: Annotated[int, Field(title='Number of the multi-accumulation table used')]


class Meta(RefCommon, RefExposureType, RefOpticalElement):
    schema_uri: ClassVar[None] = None
    reftype: Reftype
    exposure: Exposure


class DarkRefModel(DataModel):
    """
    Dark reference schema
    """

    schema_uri: ClassVar[str] = "asdf://stsci.edu/datamodels/roman/schemas/reference_files/dark-1.0.0"

    tag_uri: ClassVar[str] = "asdf://stsci.edu/datamodels/roman/tags/reference_files/dark-1.0.0"

    meta: Meta
    data: Annotated[
        AstropyQuantity[np.float32, 3, Unit("DN"), (2, 4096, 4096)],
        Field(
            description='The dark current array represents the integrated number of counts\ndue to the accumulation of dark current electrons in the pixels.\n',
            title='Dark current array',
        ),
    ]
    dq: Annotated[NdArray[np.uint32, 2, (4096, 4096)], Field(title='2-D data quality array for all planes')]
    dark_slope: Annotated[
        AstropyQuantity[np.float32, 2, Unit("DN / s"), (4096, 4096)],
        Field(
            description='The dark current slope array represents the slope of the\nintegrated number of counts due to the accumulation of dark\ncurrent electrons in the pixels for slope fitting purposes.\n',
            title='Dark current slope array',
        ),
    ]
    dark_slope_error: Annotated[
        AstropyQuantity[np.float32, 2, Unit("DN / s"), (4096, 4096)], Field(title='Uncertainty in dark current slope array')
    ]

# Generated by RAD using generator based on datamodel-code-generator
#    source schema: photometry-1.0.0.yaml
#    time stamp:    VERSION CONTROLLED
# DO NOT EDIT THIS FILE DIRECTLY!

from __future__ import annotations

from typing import Annotated, ClassVar, Optional

from pydantic import Field

from roman_datamodels.core._model import DataModel
from roman_datamodels.core.adaptors import AstropyQuantity, Unit, np


class Photometry(DataModel):
    """
    Photometry information
    """

    schema_uri: ClassVar[str] = "asdf://stsci.edu/datamodels/roman/schemas/photometry-1.0.0"

    tag_uri: ClassVar[str] = "asdf://stsci.edu/datamodels/roman/tags/photometry-1.0.0"

    conversion_megajanskys: Annotated[
        Optional[AstropyQuantity[np.float64, 0, Unit("MJy.sr**-1")]],
        Field(
            json_schema_extra={'archive_catalog': {'datatype': 'float', 'destination': ['ScienceCommon.conversion_megajanskys']}},
            title='Flux density (MJy/steradian) producing 1 cps',
        ),
    ]
    conversion_microjanskys: Annotated[
        Optional[AstropyQuantity[np.float64, 0, Unit("uJy.arcsec**-2")]],
        Field(
            json_schema_extra={
                'archive_catalog': {'datatype': 'float', 'destination': ['ScienceCommon.conversion_microjanskys']}
            },
            title='Flux density (uJy/arcsec2) producing 1 cps',
        ),
    ]
    pixelarea_steradians: Annotated[
        Optional[AstropyQuantity[np.float64, 0, Unit("sr")]],
        Field(
            json_schema_extra={'archive_catalog': {'datatype': 'float', 'destination': ['ScienceCommon.pixelarea_steradians']}},
            title='Nominal pixel area in steradians',
        ),
    ]
    pixelarea_arcsecsq: Annotated[
        Optional[AstropyQuantity[np.float64, 0, Unit("arcsec**2")]],
        Field(
            json_schema_extra={'archive_catalog': {'datatype': 'float', 'destination': ['ScienceCommon.pixelarea_arcsecsq']}},
            title='Nominal pixel area in arcsec^2',
        ),
    ]
    conversion_megajanskys_uncertainty: Annotated[
        Optional[AstropyQuantity[np.float64, 0, Unit("MJy.sr**-1")]],
        Field(
            json_schema_extra={
                'archive_catalog': {'datatype': 'float', 'destination': ['ScienceCommon.conversion_megajanskys_uncertainty']}
            },
            title='Uncertainty in flux density conversion to MJy/steradians',
        ),
    ]
    conversion_microjanskys_uncertainty: Annotated[
        Optional[AstropyQuantity[np.float64, 0, Unit("uJy.arcsec**-2")]],
        Field(
            json_schema_extra={
                'archive_catalog': {'datatype': 'float', 'destination': ['ScienceCommon.conversion_microjanskys_uncertainty']}
            },
            title='Uncertainty in flux density conversion to uJy/arcsec2',
        ),
    ]

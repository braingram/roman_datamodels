# Generated by RAD using generator based on datamodel-code-generator
#    source schema: visit-1.0.0.yaml
#    time stamp:    VERSION CONTROLLED
# DO NOT EDIT THIS FILE DIRECTLY!

from __future__ import annotations

from enum import Enum
from typing import Annotated, ClassVar

from pydantic import Field

from roman_datamodels.core._model import DataModel
from roman_datamodels.core.adaptors import AstropyTime


class EngineeringQuality(Enum):
    OK = 'OK'
    SUSPECT = 'SUSPECT'


class PointingEngdbQuality(Enum):
    CALCULATED = 'CALCULATED'
    PLANNED = 'PLANNED'


class Visit(DataModel):
    """
    Visit information
    """

    schema_uri: ClassVar[str] = "asdf://stsci.edu/datamodels/roman/schemas/visit-1.0.0"

    tag_uri: ClassVar[str] = "asdf://stsci.edu/datamodels/roman/tags/visit-1.0.0"

    engineering_quality: Annotated[
        EngineeringQuality,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'nvarchar(10)',
                    'destination': ['ScienceCommon.engineering_quality', 'GuideWindow.engineering_quality'],
                },
            },
            title='Engineering data quality indicator from EngDB',
        ),
    ]
    pointing_engdb_quality: Annotated[
        PointingEngdbQuality,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'nvarchar(10)',
                    'destination': ['ScienceCommon.pointing_engdb_quality', 'GuideWindow.pointing_engdb_quality'],
                },
            },
            title='Quality of pointing information from EngDB',
        ),
    ]
    type: Annotated[
        str,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'PSS:dms_visit.visit_type'}},
                'archive_catalog': {
                    'datatype': 'nvarchar(30)',
                    'destination': ['ScienceCommon.visit_type', 'GuideWindow.visit_type'],
                },
            },
            title='Visit type',
        ),
    ]
    start_time: Annotated[
        AstropyTime,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'datetime2',
                    'destination': ['ScienceCommon.visit_start_time', 'GuideWindow.visit_start_time'],
                },
            },
            title='UTC visit start time',
        ),
    ]
    end_time: Annotated[
        AstropyTime,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'datetime2',
                    'destination': ['ScienceCommon.visit_end_time', 'GuideWindow.visit_end_time'],
                },
            },
            title='UTC visit end time',
        ),
    ]
    status: Annotated[
        str,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'nvarchar(15)',
                    'destination': ['ScienceCommon.visit_status', 'GuideWindow.visit_status'],
                },
            },
            title='Status of a visit',
        ),
    ]
    total_exposures: Annotated[
        int,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'int',
                    'destination': ['ScienceCommon.visit_total_exposures', 'GuideWindow.visit_total_exposures'],
                },
            },
            title='Total number of planned exposures in visit',
        ),
    ]
    internal_target: Annotated[
        bool,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'nchar(1)',
                    'destination': ['ScienceCommon.visit_internal_target', 'GuideWindow.visit_internal_target'],
                },
            },
            title='At least one exposure in visit is internal',
        ),
    ]
    target_of_opportunity: Annotated[
        bool,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'nchar(1)',
                    'destination': ['ScienceCommon.target_of_opportunity', 'GuideWindow.target_of_opportunity'],
                },
            },
            title='Visit scheduled as target of opportunity',
        ),
    ]

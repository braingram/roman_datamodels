# Generated by RAD using generator based on datamodel-code-generator
#    source schema: data_products/ramp-1.0.0.yaml
#    time stamp:    VERSION CONTROLLED
# DO NOT EDIT THIS FILE DIRECTLY!

from __future__ import annotations

from typing import Annotated, ClassVar

from pydantic import Field

from roman_datamodels.core._extended import _RampModel
from roman_datamodels.core.adaptors import AstropyQuantity, NdArray, Unit, np

from .. import common


class RampModel(_RampModel):
    """
    Ramp schema
    """

    schema_uri: ClassVar[str] = "asdf://stsci.edu/datamodels/roman/schemas/data_products/ramp-1.0.0"

    tag_uri: ClassVar[str] = "asdf://stsci.edu/datamodels/roman/tags/data_products/ramp-1.0.0"

    meta: common.Common
    data: Annotated[
        AstropyQuantity[np.float32, 3, (Unit("DN"), Unit("electron")), (8, 4096, 4096)],
        Field(title='Science data, including the border reference pixels.'),
    ]
    pixeldq: Annotated[NdArray[np.uint32, 2, (4096, 4096)], Field(title='2-D data quality array for all planes')]
    groupdq: Annotated[NdArray[np.uint8, 3, (8, 4096, 4096)], Field(title='3-D data quality array (plane dq for each group)')]
    err: Annotated[
        AstropyQuantity[np.float32, 3, (Unit("DN"), Unit("electron")), (8, 4096, 4096)],
        Field(title='Error array containing the square root of the exposure-level combined variance'),
    ]
    amp33: Annotated[AstropyQuantity[np.uint16, 3, Unit("DN"), (8, 4096, 128)], Field(title='Amp 33 reference pixel data')]
    border_ref_pix_left: Annotated[
        AstropyQuantity[np.float32, 3, Unit("DN"), (8, 4096, 4)],
        Field(title='Original border reference pixels, on left (from viewers perspective).'),
    ]
    border_ref_pix_right: Annotated[
        AstropyQuantity[np.float32, 3, Unit("DN"), (8, 4096, 4)],
        Field(title='Original border reference pixels, on right (from viewers perspective).'),
    ]
    border_ref_pix_top: Annotated[
        AstropyQuantity[np.float32, 3, Unit("DN"), (8, 4, 4096)], Field(title='Original border reference pixels, on top.')
    ]
    border_ref_pix_bottom: Annotated[
        AstropyQuantity[np.float32, 3, Unit("DN"), (8, 4, 4096)], Field(title='Original border reference pixels, on bottom.')
    ]
    dq_border_ref_pix_left: Annotated[
        NdArray[np.uint32, 2, (4096, 4)], Field(title='DQ for border reference pixels, on left (from viewers perspective).')
    ]
    dq_border_ref_pix_right: Annotated[
        NdArray[np.uint32, 2, (4096, 4)], Field(title='DQ for border reference pixels, on right (from viewers perspective).')
    ]
    dq_border_ref_pix_top: Annotated[NdArray[np.uint32, 2, (4, 4096)], Field(title='DQ for border reference pixels, on top.')]
    dq_border_ref_pix_bottom: Annotated[
        NdArray[np.uint32, 2, (4, 4096)], Field(title='DQ for border reference pixels, on bottom.')
    ]

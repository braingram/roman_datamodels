# Generated by RAD using generator based on datamodel-code-generator
#    source schema: data_products/guidewindow-1.0.0.yaml
#    time stamp:    VERSION CONTROLLED
# DO NOT EDIT THIS FILE DIRECTLY!

from __future__ import annotations

from typing import Annotated, ClassVar

from pydantic import Field

from roman_datamodels.core._model import DataModel
from roman_datamodels.core.adaptors import AstropyQuantity, AstropyTime, Unit, np

from .. import guidewindow_modes
from ..common import Common


class meta(Common):
    schema_uri: ClassVar[None] = None
    gw_start_time: Annotated[
        AstropyTime,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'Science Data Formatting'}},
                'archive_catalog': {'datatype': 'datetime2', 'destination': ['GuideWindow.gw_start_time']},
            },
            title='UTC time at the start of the guide window exposure',
        ),
    ]
    gw_end_time: Annotated[
        AstropyTime,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'Science Data Formatting'}},
                'archive_catalog': {'datatype': 'datetime2', 'destination': ['GuideWindow.gw_end_time']},
            },
            title='UTC time at the end of the guide window exposure',
        ),
    ]
    gw_frame_readout_time: Annotated[
        float,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'Science Data Formatting'}},
                'archive_catalog': {'datatype': 'float', 'destination': ['GuideWindow.gw_frame_readout_time']},
            },
            title='The readout time for the guide window frame',
        ),
    ]
    gw_function_start_time: Annotated[
        AstropyTime,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'Science Data Formatting'}},
                'archive_catalog': {'datatype': 'datetime2', 'destination': ['GuideWindow.gw_function_start_time']},
            },
            title='Observatory UTC time at guider function start',
        ),
    ]
    gw_function_end_time: Annotated[
        AstropyTime,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'Science Data Formatting'}},
                'archive_catalog': {'datatype': 'datetime2', 'destination': ['GuideWindow.gw_function_end_time']},
            },
            title='Observatory UTC time at guider function end',
        ),
    ]
    gw_acq_exec_stat: Annotated[
        str,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'Science Data Formatting'}},
                'archive_catalog': {'datatype': 'nvarchar(15)', 'destination': ['GuideWindow.gw_acq_exec_stat']},
            },
            title='Guide star window acquisition status',
        ),
    ]
    pedestal_resultant_exp_time: Annotated[
        float,
        Field(
            description='The cumulative exposure time for all the guide window\npedestal frames\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'Science Data Formatting'}},
                'archive_catalog': {'datatype': 'float', 'destination': ['GuideWindow.gw_pedestal_resultant_exp_time']},
            },
            title='Total exposure time for the guide window pedestal frames',
        ),
    ]
    signal_resultant_exp_time: Annotated[
        float,
        Field(
            description='The cumulative exposure time for all the guide window\nresultant frames\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'Science Data Formatting'}},
                'archive_catalog': {'datatype': 'float', 'destination': ['GuideWindow.gw_signal_resultant_exp_time']},
            },
            title='Total exposure time for the guide window resultant frames',
        ),
    ]
    gw_acq_number: Annotated[
        int,
        Field(
            description='A single digit representing the guide star acquisition\nnumber within the visit\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'Science Data Formatting'}},
                'archive_catalog': {'datatype': 'int', 'destination': ['GuideWindow.gw_acq_number']},
            },
            title='Guide Window ID "Q"',
        ),
    ]
    gw_science_file_source: Annotated[
        str,
        Field(
            description='The science data file that is associated with this guide window,\ne.g. "r0000101001001001001_01101_0001_WFI01_uncal.asdf"\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'Science Data Formatting'}},
                'archive_catalog': {'datatype': 'nvarchar(120)', 'destination': ['GuideWindow.gw_science_file_source']},
            },
            title='The science data associated with this guide window',
        ),
    ]
    gw_mode: Annotated[
        guidewindow_modes.GuidewindowModes,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'Science Data Formatting'}},
                'archive_catalog': {'datatype': 'nvarchar(18)', 'destination': ['GuideWindow.gw_mode']},
            }
        ),
    ]
    gw_window_xstart: Annotated[
        int,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'Science Data Formatting'}},
                'archive_catalog': {'datatype': 'int', 'destination': ['GuideWindow.gw_window_xstart']},
            },
            title='Guide window x start position on the detector',
        ),
    ]
    gw_window_ystart: Annotated[
        int,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'Science Data Formatting'}},
                'archive_catalog': {'datatype': 'int', 'destination': ['GuideWindow.gw_window_ystart']},
            },
            title='Guide window y start position on the detector',
        ),
    ]
    gw_window_xstop: Annotated[
        int,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'Science Data Formatting'}},
                'archive_catalog': {'datatype': 'int', 'destination': ['GuideWindow.gw_window_xstop']},
            },
            title='Guide window x stop position on the detector',
        ),
    ]
    gw_window_ystop: Annotated[
        int,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'Science Data Formatting'}},
                'archive_catalog': {'datatype': 'int', 'destination': ['GuideWindow.gw_window_ystop']},
            },
            title='Guide window y stop position on the detector',
        ),
    ]
    gw_window_xsize: Annotated[
        int,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'Science Data Formatting'}},
                'archive_catalog': {'datatype': 'int', 'destination': ['GuideWindow.gw_window_xsize']},
            },
            title='Guide window size in the x direction in detector coordinates',
        ),
    ]
    gw_window_ysize: Annotated[
        int,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'Science Data Formatting'}},
                'archive_catalog': {'datatype': 'int', 'destination': ['GuideWindow.gw_window_ysize']},
            },
            title='Guide window size in the y direction in detector coordinates',
        ),
    ]


class GuidewindowModel(DataModel):
    """
    Guide window information
    """

    schema_uri: ClassVar[str] = "asdf://stsci.edu/datamodels/roman/schemas/data_products/guidewindow-1.0.0"

    tag_uri: ClassVar[str] = "asdf://stsci.edu/datamodels/roman/tags/data_products/guidewindow-1.0.0"

    meta: meta
    pedestal_frames: Annotated[
        AstropyQuantity[np.uint16, 5, Unit("DN"), (2, 8, 16, 32, 32)],
        Field(
            title='Reconstituted and oriented pedestal frame GW images. Dimensions: num_frames, num_combined_resultants (or num_uncombined_resultants), num_reads, x, y'
        ),
    ]
    signal_frames: Annotated[
        AstropyQuantity[np.uint16, 5, Unit("DN"), (2, 8, 16, 32, 32)],
        Field(
            title='Reconstituted and oriented signal frames. Dimensions: num_frames, num_combined_resultants (or num_uncombined_resultants), num_reads, x, y'
        ),
    ]
    amp33: Annotated[
        AstropyQuantity[np.uint16, 5, Unit("DN"), (2, 8, 16, 32, 32)],
        Field(
            title='Amp 33 reference pixel data. Dimensions: num_frames, num_combined_resultants (or num_uncombined_resultants), num_reads, x, y'
        ),
    ]

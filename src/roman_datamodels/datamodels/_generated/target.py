# Generated by RAD using generator based on datamodel-code-generator
#    source schema: target-1.0.0.yaml
#    time stamp:    VERSION CONTROLLED
# DO NOT EDIT THIS FILE DIRECTLY!

from __future__ import annotations

from enum import Enum
from typing import Annotated, ClassVar

from pydantic import Field

from roman_datamodels.core._model import DataModel


class type(Enum):
    FIXED = 'FIXED'
    MOVING = 'MOVING'
    GENERIC = 'GENERIC'


class SourceType(Enum):
    EXTENDED = 'EXTENDED'
    POINT = 'POINT'
    UNKNOWN = 'UNKNOWN'


class Target(DataModel):
    """
    Target information
    """

    schema_uri: ClassVar[str] = "asdf://stsci.edu/datamodels/roman/schemas/target-1.0.0"

    tag_uri: ClassVar[str] = "asdf://stsci.edu/datamodels/roman/tags/target-1.0.0"

    proposer_name: Annotated[
        str,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'PSS:dms_target.target_name'}},
                'archive_catalog': {
                    'datatype': 'nvarchar(100)',
                    'destination': ['ScienceCommon.proposer_target_name', 'GuideWindow.proposer_target_name'],
                },
            },
            title="Proposer's name for the target",
        ),
    ]
    catalog_name: Annotated[
        str,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'PSS:dms_target.standard_target_name'}},
                'archive_catalog': {
                    'datatype': 'nvarchar(256)',
                    'destination': ['ScienceCommon.catalog_name', 'GuideWindow.catalog_name'],
                },
            },
            title='Standard astronomical catalog name for target',
        ),
    ]
    type: Annotated[
        type,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'PSS:dms_target.target_type'}},
                'archive_catalog': {
                    'datatype': 'nvarchar(10)',
                    'destination': ['ScienceCommon.target_type', 'GuideWindow.target_type'],
                },
            },
            title='Type of target',
        ),
    ]
    ra: Annotated[
        float,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'PSS:dms_target.ra_computed'}},
                'archive_catalog': {'datatype': 'float', 'destination': ['ScienceCommon.ra', 'GuideWindow.ra']},
            },
            title='Target RA at mid time of exposure',
        ),
    ]
    dec: Annotated[
        float,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'PSS:dms_target.dec_computed'}},
                'archive_catalog': {'datatype': 'float', 'destination': ['ScienceCommon.dec', 'GuideWindow.dec']},
            },
            title='Target Dec at mid time of exposure',
        ),
    ]
    ra_uncertainty: Annotated[
        float,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'PSS:dms_target.ra_uncertainty_computed'}},
                'archive_catalog': {
                    'datatype': 'float',
                    'destination': ['ScienceCommon.ra_uncertainty', 'GuideWindow.ra_uncertainty'],
                },
            },
            title='Target RA uncertainty',
        ),
    ]
    dec_uncertainty: Annotated[
        float,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'PSS:dms_target.dec_uncertainty_computed'}},
                'archive_catalog': {
                    'datatype': 'float',
                    'destination': ['ScienceCommon.dec_uncertainty', 'GuideWindow.dec_uncertainty'],
                },
            },
            title='Target Dec uncertainty',
        ),
    ]
    proper_motion_ra: Annotated[
        float,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'PSS:dms_target.ra_proper_motion'}},
                'archive_catalog': {
                    'datatype': 'float',
                    'destination': ['ScienceCommon.proper_motion_ra', 'GuideWindow.proper_motion_ra'],
                },
            },
            title='Target proper motion in RA',
        ),
    ]
    proper_motion_dec: Annotated[
        float,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'PSS:dms_target.dec_proper_motion'}},
                'archive_catalog': {
                    'datatype': 'float',
                    'destination': ['ScienceCommon.proper_motion_dec', 'GuideWindow.proper_motion_dec'],
                },
            },
            title='Target proper motion in Dec',
        ),
    ]
    proper_motion_epoch: Annotated[
        str,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'PSS:dms_visit.epoch'}},
                'archive_catalog': {
                    'datatype': 'nvarchar(10)',
                    'destination': ['ScienceCommon.proper_motion_epoch', 'GuideWindow.proper_motion_epoch'],
                },
            },
            title='Target proper motion epoch',
        ),
    ]
    proposer_ra: Annotated[
        float,
        Field(
            json_schema_extra={
                'sdf': {
                    'special_processing': 'VALUE_REQUIRED',
                    'source': {'origin': 'PSS:fixed_target.ra_literal', 'function': 'hms_to_degrees'},
                },
                'archive_catalog': {'datatype': 'float', 'destination': ['ScienceCommon.proposer_ra', 'GuideWindow.proposer_ra']},
            },
            title="Proposer's target RA",
        ),
    ]
    proposer_dec: Annotated[
        float,
        Field(
            json_schema_extra={
                'sdf': {
                    'special_processing': 'VALUE_REQUIRED',
                    'source': {'origin': 'PSS:fixed_target.dec_literal', 'function': 'hms_to_degrees'},
                },
                'archive_catalog': {
                    'datatype': 'float',
                    'destination': ['ScienceCommon.proposer_dec', 'GuideWindow.proposer_dec'],
                },
            },
            title="Proposer's target Dec",
        ),
    ]
    source_type: Annotated[
        SourceType,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'nvarchar(8)',
                    'destination': ['ScienceCommon.source_type', 'GuideWindow.source_type'],
                },
            },
            title='Source type used for calibration',
        ),
    ]

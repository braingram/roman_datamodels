# Generated by RAD using generator based on datamodel-code-generator
#    source schema: ref_common-1.0.0.yaml
#    time stamp:    VERSION CONTROLLED
# DO NOT EDIT THIS FILE DIRECTLY!

from __future__ import annotations

from enum import Enum
from typing import Annotated, ClassVar

from pydantic import Field

from roman_datamodels.core._base import BaseDataModel
from roman_datamodels.core.adaptors import AstropyTime

from . import wfi_detector


class Pedigree(Enum):
    GROUND = 'GROUND'
    MODEL = 'MODEL'
    DUMMY = 'DUMMY'
    SIMULATION = 'SIMULATION'


class telescope(Enum):
    ROMAN = 'ROMAN'


class name(Enum):
    WFI = 'WFI'


class Instrument(BaseDataModel):
    schema_uri: ClassVar[None] = None
    name: Annotated[name, Field(title='Instrument used to acquire the data')]
    detector: wfi_detector.WfiDetector


class RefCommon(BaseDataModel):
    """
    Common reference metadata properties
    """

    schema_uri: ClassVar[str] = "asdf://stsci.edu/datamodels/roman/schemas/ref_common-1.0.0"

    reftype: Annotated[str, Field(title='Reference File type')]
    pedigree: Annotated[Pedigree, Field(title='The pedigree of the reference file')]
    description: Annotated[str, Field(title='Description of the reference file')]
    author: Annotated[str, Field(title='Author of the reference file')]
    useafter: Annotated[AstropyTime, Field(title='Use after date of the reference file')]
    telescope: Annotated[telescope, Field(title='Telescope data reference data is used to calibrate')]
    origin: Annotated[str, Field(title='Organization responsible for creating file')]
    instrument: Instrument

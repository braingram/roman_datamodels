# Generated by RAD using generator based on datamodel-code-generator
#    source schema: exposure-1.0.0.yaml
#    time stamp:    VERSION CONTROLLED
# DO NOT EDIT THIS FILE DIRECTLY!

from __future__ import annotations

from typing import Annotated, ClassVar, List, Optional

from pydantic import Field

from roman_datamodels.core._model import DataModel
from roman_datamodels.core.adaptors import AstropyTime

from . import exposure_type


class Exposure(DataModel):
    """
    Exposure information

    """

    schema_uri: ClassVar[str] = "asdf://stsci.edu/datamodels/roman/schemas/exposure-1.0.0"

    tag_uri: ClassVar[str] = "asdf://stsci.edu/datamodels/roman/tags/exposure-1.0.0"

    id: Annotated[
        int,
        Field(
            description='The exposure number for a given visit id',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {'datatype': 'int', 'destination': ['ScienceCommon.exposure_id', 'GuideWindow.exposure_id']},
            },
            title='Exposure id number within visit',
        ),
    ]
    type: Annotated[
        exposure_type.ExposureType,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'nvarchar(25)',
                    'destination': ['ScienceCommon.exposure_type', 'GuideWindow.exposure_type'],
                },
            }
        ),
    ]
    start_time: Annotated[
        AstropyTime,
        Field(
            description='This is a python date-time object that records the\ntime at the start of the exposure in UTC.\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'datetime2',
                    'destination': ['ScienceCommon.exposure_start_time', 'GuideWindow.exposure_start_time'],
                },
            },
            title='UTC exposure start time',
        ),
    ]
    mid_time: Annotated[
        AstropyTime,
        Field(
            description='This is a python date-time object that records the\ntime at the middle of the exposure in UTC.\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'datetime2',
                    'destination': ['ScienceCommon.exposure_mid_time', 'GuideWindow.exposure_mid_time'],
                },
            },
            title='UTC exposure mid time',
        ),
    ]
    end_time: Annotated[
        AstropyTime,
        Field(
            description='This is a python date-time object that records the\ntime at the end of the exposure in UTC.\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'datetime2',
                    'destination': ['ScienceCommon.exposure_end_time', 'GuideWindow.exposure_end_time'],
                },
            },
            title='UTC exposure end time',
        ),
    ]
    start_time_mjd: Annotated[
        float,
        Field(
            description='This records the time at the start of the exposure using the\nModified Julian Date (MJD). This is used in the archive catalog for\nmulti-mission matching.\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'float',
                    'destination': ['ScienceCommon.exposure_start_time_mjd', 'GuideWindow.exposure_start_time_mjd'],
                },
            },
            title='[d] exposure start time in MJD',
        ),
    ]
    mid_time_mjd: Annotated[
        float,
        Field(
            description='This records the time at the midpoint of the exposure using the\nModified Julian Date  (MJD). This is used in the archive catalog for\nmulti-mission matching.\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'float',
                    'destination': ['ScienceCommon.exposure_mid_time_mjd', 'GuideWindow.exposure_mid_time_mjd'],
                },
            },
            title='[d] exposure mid time in MJD',
        ),
    ]
    end_time_mjd: Annotated[
        float,
        Field(
            description='This records the time at the end of the exposure using the\nModified Julian Date  (MJD). This is used in the archive catalog for\nmulti-mission matching.\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'float',
                    'destination': ['ScienceCommon.exposure_end_time_mjd', 'GuideWindow.exposure_end_time_mjd'],
                },
            },
            title='[d] exposure end time in MJD',
        ),
    ]
    start_time_tdb: Annotated[
        float,
        Field(
            description='This records the time at the start of the exposure using\nthe Modified Julian Date for the Barycentric Dynamical Time system\n(TDB, Temps Dynamique Barycentrique), a relativistic coordinate\ntime scale.\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'float',
                    'destination': ['ScienceCommon.exposure_start_time_tdb', 'GuideWindow.exposure_start_time_tdb'],
                },
            },
            title='[d] TDB time of exposure start in MJD',
        ),
    ]
    mid_time_tdb: Annotated[
        float,
        Field(
            description='This records the time at the midpoint of the exposure using\nthe Modified Julian Date for the Barycentric Dynamical Time system\n(TDB, Temps Dynamique Barycentrique), a relativistic coordinate\ntime scale.\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'float',
                    'destination': ['ScienceCommon.exposure_mid_time_tdb', 'GuideWindow.exposure_mid_time_tdb'],
                },
            },
            title='[d] TDB time of exposure mid in MJD',
        ),
    ]
    end_time_tdb: Annotated[
        float,
        Field(
            description='This records the time at the end of the exposure using\nthe Modified Julian Date for the Barycentric Dynamical Time system\n(TDB, Temps Dynamique Barycentrique), a relativistic coordinate\ntime scale.\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'float',
                    'destination': ['ScienceCommon.exposure_end_time_tdb', 'GuideWindow.exposure_end_time_tdb'],
                },
            },
            title='[d] TDB time of exposure end in MJD',
        ),
    ]
    ngroups: Annotated[
        int,
        Field(
            description='This is the number of resultant frames in the exposure\nthat are transmitted to the ground. The WFI data always has the\nnumber of integrations=1.\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'int',
                    'destination': ['ScienceCommon.exposure_ngroups', 'GuideWindow.exposure_ngroups'],
                },
            },
            title='Number of groups in integration',
        ),
    ]
    nframes: Annotated[
        int,
        Field(
            description='This is the number of science frames that are combined to\nproduce a resultant frame.\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'int',
                    'destination': ['ScienceCommon.exposure_nframes', 'GuideWindow.exposure_nframes'],
                },
            },
            title='Number of frames per group',
        ),
    ]
    data_problem: Annotated[
        bool,
        Field(
            description='This is a flag to indicate that the science telemetry\nexperienced a problem.\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'nchar(1)',
                    'destination': ['ScienceCommon.exposure_data_problem', 'GuideWindow.exposure_data_problem'],
                },
            },
            title='Science telemetry indicated a problem',
        ),
    ]
    sca_number: Annotated[
        int,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'int',
                    'destination': ['ScienceCommon.exposure_sca_number', 'GuideWindow.exposure_sca_number'],
                },
            },
            title='Sensor Chip Assembly number',
        ),
    ]
    gain_factor: Annotated[
        float,
        Field(
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'float',
                    'destination': ['ScienceCommon.exposure_gain_factor', 'GuideWindow.exposure_gain_factor'],
                },
            },
            title='Gain scale factor',
        ),
    ]
    integration_time: Annotated[
        float,
        Field(
            description='The effective time that the sensor has been exposed to the sky.',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'float',
                    'destination': ['ScienceCommon.exposure_integration_time', 'GuideWindow.exposure_integration_time'],
                },
            },
            title='[s] Effective integration time',
        ),
    ]
    elapsed_exposure_time: Annotated[
        float,
        Field(
            description='The time between the start of the first Reset/Read Science Frame of an Exposure\nand the completion of the final Read Only Science Frame of that Exposure.\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'float',
                    'destination': ['ScienceCommon.elapsed_exposure_time', 'GuideWindow.elapsed_exposure_time'],
                },
            },
            title='[s] Total elapsed exposure time',
        ),
    ]
    frame_divisor: Annotated[
        int,
        Field(
            description='This is the number of reads per resultant. Its use depends upon the definition\nin the MA table.\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'int',
                    'destination': ['ScienceCommon.exposure_frame_divisor', 'GuideWindow.exposure_frame_divisor'],
                },
            },
            title='Divisor applied to frame-averaged groups',
        ),
    ]
    groupgap: Annotated[
        int,
        Field(
            description='This is the number of reads that are "dropped" and not used in the resultant.',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'int',
                    'destination': ['ScienceCommon.exposure_groupgap', 'GuideWindow.exposure_groupgap'],
                },
            },
            title='Number of frames dropped between groups',
        ),
    ]
    frame_time: Annotated[
        float,
        Field(
            description='The time between the end of one read and the start of the next read. This\ndepends on the MA table being used.\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'float',
                    'destination': ['ScienceCommon.exposure_frame_time', 'GuideWindow.exposure_frame_time'],
                },
            },
            title='[s] Time between frames',
        ),
    ]
    group_time: Annotated[
        float,
        Field(
            description='The time that is the sum of the reads that are used to construct a resultant.\nThis will depend on the MA table being used.\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'float',
                    'destination': ['ScienceCommon.exposure_group_time', 'GuideWindow.exposure_group_time'],
                },
            },
            title='[s] Time between groups',
        ),
    ]
    exposure_time: Annotated[
        float,
        Field(
            description='The time between the start of the first Reset/Read Science Frame of an Exposure\nand the completion of the final Read Only Science Frame of that Exposure.\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'float',
                    'destination': ['ScienceCommon.exposure_time', 'GuideWindow.exposure_time'],
                },
            },
            title='[s] exposure time',
        ),
    ]
    effective_exposure_time: Annotated[
        float,
        Field(
            description='The time that the detector is collecting photons that are used in the resultants.',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'float',
                    'destination': ['ScienceCommon.effective_exposure_time', 'GuideWindow.effective_exposure_time'],
                },
            },
            title='[s] Effective exposure time',
        ),
    ]
    duration: Annotated[
        float,
        Field(
            description='The time that the detector is dedicated to an exposure. This includes any overhead\nand times for dropped frames etc.\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'float',
                    'destination': ['ScienceCommon.exposure_duration', 'GuideWindow.exposure_duration'],
                },
            },
            title='[s] Total duration of exposure',
        ),
    ]
    ma_table_name: Annotated[
        str,
        Field(
            description='The name of the MA table used for the exposure as defined by the\nPRD (Project Reference Database)\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'nvarchar(50)',
                    'destination': ['ScienceCommon.ma_table_name', 'GuideWindow.ma_table_name'],
                },
            },
            title='Identifier for the multi-accumulation table used',
        ),
    ]
    ma_table_number: Annotated[
        int,
        Field(
            description='The number of the MA table used for the exposure as defined by the\nPRD (Project Reference Database). This is used for matching the exposure\nto the appropriate calibration data.\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'smallint',
                    'destination': ['ScienceCommon.ma_table_number', 'GuideWindow.ma_table_number'],
                },
            },
            title='Numerical identifier for the multi-accumulation table used',
        ),
    ]
    level0_compressed: Annotated[
        bool,
        Field(
            description='A flag to indicate that the exposure has data that needed to be decompressed by\nthe ground system.\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'nchar(1)',
                    'destination': ['ScienceCommon.exposure_level0_compressed', 'GuideWindow.exposure_level0_compressed'],
                },
            },
            title='Level 0 data was compressed',
        ),
    ]
    read_pattern: Annotated[
        List[List[int]],
        Field(
            description='Enumeration of detector reads to resultants making up the L1 data downlinked\nfrom the observatory\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {
                    'datatype': 'nvarchar(3500)',
                    'destination': ['ScienceCommon.read_pattern', 'GuideWindow.read_pattern'],
                },
            },
            title='Pattern of reads',
        ),
    ]
    truncated: Annotated[
        Optional[bool],
        Field(
            None,
            description='This is a flag to indicate that the the MA table was truncated.\n',
            json_schema_extra={
                'sdf': {'special_processing': 'VALUE_REQUIRED', 'source': {'origin': 'TBD'}},
                'archive_catalog': {'datatype': 'nchar(1)', 'destination': ['ScienceCommon.exposure_truncated']},
            },
            title='MA Tables were truncated',
        ),
    ]
